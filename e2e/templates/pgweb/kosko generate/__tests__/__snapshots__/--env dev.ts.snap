// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`--env dev : should generate dev manifest 1`] = `
"---
metadata:
  annotations:
    field.cattle.io/creatorId: gitlab
    field.cattle.io/projectId: 'c-kk8xm:p-4fxg8'
    git/branch: e2e-branch
    git/remote: 'git@github.com:SocialGouv/sample-kosko.git'
    app.gitlab.com/app: socialgouv-sample-kosko
    app.gitlab.com/env: e2e-branch-42
    app.gitlab.com/env.name: e2e-branch-dev2
  labels:
    application: e2e-branch-42-sample-kosko
    owner: sample-kosko
    team: sample-kosko
    cert: wildcard
  name: sample-kosko-24-e2e-branch-42
apiVersion: v1
kind: Namespace
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  annotations:
    sealedsecrets.bitnami.com/cluster-wide: 'true'
    app.gitlab.com/app: socialgouv-sample-kosko
    app.gitlab.com/env: e2e-branch-42
    app.gitlab.com/env.name: e2e-branch-dev2
  name: azure-pg-admin-user
  labels:
    application: e2e-branch-42-sample-kosko
    owner: sample-kosko
    team: sample-kosko
    cert: wildcard
  namespace: sample-kosko-24-e2e-branch-42
spec:
  encryptedData: null
  template:
    metadata:
      annotations:
        sealedsecrets.bitnami.com/cluster-wide: 'true'
        app.gitlab.com/app: socialgouv-sample-kosko
        app.gitlab.com/env: e2e-branch-42
        app.gitlab.com/env.name: e2e-branch-dev2
      name: azure-pg-admin-user
      labels:
        application: e2e-branch-42-sample-kosko
        owner: sample-kosko
        team: sample-kosko
        cert: wildcard
    type: Opaque
---
metadata:
  annotations:
    app.gitlab.com/app: socialgouv-sample-kosko
    app.gitlab.com/env: e2e-branch-42
    app.gitlab.com/env.name: e2e-branch-dev2
  labels:
    application: e2e-branch-42-sample-kosko
    owner: sample-kosko
    team: sample-kosko
    cert: wildcard
  name: create-db-job-8843083
  namespace: sample-kosko-24-e2e-branch-42
spec:
  backoffLimit: 0
  template:
    spec:
      containers:
        - command:
            - create-db-user
          env:
            - name: NEW_DB_NAME
              value: autodevops_8843083
            - name: NEW_USER
              value: user_8843083
            - name: NEW_PASSWORD
              value: password_8843083
            - name: NEW_DB_EXTENSIONS
              value: hstore pgcrypto citext
          envFrom:
            - secretRef:
                name: azure-pg-admin-user
          image: >-
            registry.gitlab.factory.social.gouv.fr/socialgouv/docker/azure-db:0.28.0
          imagePullPolicy: IfNotPresent
          name: create-db-user
          resources:
            limits:
              cpu: 300m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 64Mi
      restartPolicy: Never
    metadata:
      annotations:
        app.gitlab.com/app: socialgouv-sample-kosko
        app.gitlab.com/env: e2e-branch-42
        app.gitlab.com/env.name: e2e-branch-dev2
      labels:
        application: e2e-branch-42-sample-kosko
        owner: sample-kosko
        team: sample-kosko
        cert: wildcard
apiVersion: batch/v1
kind: Job
---
stringData:
  DATABASE_URL: >-
    postgresql://user_8843083%40samplekoskodevserver.postgres.database.azure.com:password_8843083@samplekoskodevserver.postgres.database.azure.com/autodevops_8843083?sslmode=require
  DB_URI: >-
    postgresql://user_8843083%40samplekoskodevserver.postgres.database.azure.com:password_8843083@samplekoskodevserver.postgres.database.azure.com/autodevops_8843083?sslmode=require
  HASURA_GRAPHQL_DATABASE_URL: >-
    postgresql://user_8843083%40samplekoskodevserver.postgres.database.azure.com:password_8843083@samplekoskodevserver.postgres.database.azure.com/autodevops_8843083?sslmode=require
  PGDATABASE: autodevops_8843083
  PGHOST: samplekoskodevserver.postgres.database.azure.com
  PGPASSWORD: password_8843083
  PGRST_DB_URI: >-
    postgresql://user_8843083%40samplekoskodevserver.postgres.database.azure.com:password_8843083@samplekoskodevserver.postgres.database.azure.com/autodevops_8843083?sslmode=require
  PGSSLMODE: require
  PGUSER: user_8843083@samplekoskodevserver.postgres.database.azure.com
apiVersion: v1
kind: Secret
metadata:
  annotations:
    app.gitlab.com/app: socialgouv-sample-kosko
    app.gitlab.com/env: e2e-branch-42
    app.gitlab.com/env.name: e2e-branch-dev2
  labels:
    application: e2e-branch-42-sample-kosko
    owner: sample-kosko
    team: sample-kosko
    cert: wildcard
  name: azure-pg-user-8843083
  namespace: sample-kosko-24-e2e-branch-42
---
metadata:
  annotations:
    app.gitlab.com/app: socialgouv-sample-kosko
    app.gitlab.com/env: e2e-branch-42
    app.gitlab.com/env.name: e2e-branch-dev2
  labels:
    app: pgweb
    application: e2e-branch-42-sample-kosko
    owner: sample-kosko
    team: sample-kosko
    cert: wildcard
    component: pgweb
  name: pgweb
  namespace: sample-kosko-24-e2e-branch-42
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pgweb
  template:
    metadata:
      annotations:
        app.gitlab.com/app: socialgouv-sample-kosko
        app.gitlab.com/env: e2e-branch-42
        app.gitlab.com/env.name: e2e-branch-dev2
      labels:
        app: pgweb
        application: e2e-branch-42-sample-kosko
        owner: sample-kosko
        team: sample-kosko
        cert: wildcard
        component: pgweb
    spec:
      containers:
        - image: 'sosedoff/pgweb:latest'
          livenessProbe:
            failureThreshold: 6
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
          name: pgweb
          ports:
            - containerPort: 8081
              name: http
          readinessProbe:
            failureThreshold: 15
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: 500m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 64Mi
          startupProbe:
            failureThreshold: 12
            httpGet:
              path: /healthz
              port: http
            periodSeconds: 5
          envFrom:
            - secretRef:
                name: azure-pg-user-8843083
      initContainers:
        - name: wait-for-postgres
          image: >-
            registry.gitlab.factory.social.gouv.fr/socialgouv/docker/wait-for-postgres:2.0.0
          imagePullPolicy: Always
          resources:
            requests:
              cpu: 5m
              memory: 16Mi
            limits:
              cpu: 20m
              memory: 32Mi
          envFrom:
            - secretRef:
                name: azure-pg-user-8843083
          env:
            - name: WAIT_FOR_RETRIES
              value: '24'
apiVersion: apps/v1
kind: Deployment
---
metadata:
  labels:
    app: pgweb
    application: e2e-branch-42-sample-kosko
    owner: sample-kosko
    team: sample-kosko
    cert: wildcard
  name: pgweb
  annotations:
    app.gitlab.com/app: socialgouv-sample-kosko
    app.gitlab.com/env: e2e-branch-42
    app.gitlab.com/env.name: e2e-branch-dev2
  namespace: sample-kosko-24-e2e-branch-42
spec:
  ports:
    - port: 80
      targetPort: 8081
      name: http
  selector:
    app: pgweb
  type: ClusterIP
apiVersion: v1
kind: Service
---
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    app.gitlab.com/app: socialgouv-sample-kosko
    app.gitlab.com/env: e2e-branch-42
    app.gitlab.com/env.name: e2e-branch-dev2
  labels:
    app: pgweb
    application: e2e-branch-42-sample-kosko
    owner: sample-kosko
    team: sample-kosko
    cert: wildcard
  name: pgweb
  namespace: sample-kosko-24-e2e-branch-42
spec:
  rules:
    - host: pgweb-e2e-branch-42-sample-kosko.dev.fabrique.social.gouv.fr
      http:
        paths:
          - backend:
              serviceName: pgweb
              servicePort: 80
            path: /
  tls:
    - hosts:
        - pgweb-e2e-branch-42-sample-kosko.dev.fabrique.social.gouv.fr
      secretName: wildcard-crt
apiVersion: extensions/v1beta1
kind: Ingress"
`;
